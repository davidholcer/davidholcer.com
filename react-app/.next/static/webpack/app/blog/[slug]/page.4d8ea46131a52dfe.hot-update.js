"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/blog/[slug]/page",{

/***/ "(app-pages-browser)/./src/components/BlogPost.tsx":
/*!*************************************!*\
  !*** ./src/components/BlogPost.tsx ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ BlogPost; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/image */ \"(app-pages-browser)/./node_modules/next/dist/api/image.js\");\n/* harmony import */ var _ui_CodeBlock__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ui/CodeBlock */ \"(app-pages-browser)/./src/components/ui/CodeBlock.tsx\");\n/* harmony import */ var _TableOfContents__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TableOfContents */ \"(app-pages-browser)/./src/components/TableOfContents.tsx\");\n/* harmony import */ var _ui_Footnote__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ui/Footnote */ \"(app-pages-browser)/./src/components/ui/Footnote.tsx\");\n/* harmony import */ var _P5Sketch__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./P5Sketch */ \"(app-pages-browser)/./src/components/P5Sketch.tsx\");\n/* harmony import */ var _ui_Video__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ui/Video */ \"(app-pages-browser)/./src/components/ui/Video.tsx\");\n/* harmony import */ var _ui_PDF__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ui/PDF */ \"(app-pages-browser)/./src/components/ui/PDF.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\nfunction BlogPost(param) {\n    let { content, title, date, author, image, description, iama } = param;\n    _s();\n    const [headings, setHeadings] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [footnotes, setFootnotes] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [footnoteContents, setFootnoteContents] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [zoomedImage, setZoomedImage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [contentSegments, setContentSegments] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [parsedData, setParsedData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [tocPosition, setTocPosition] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        top: 18.75,\n        left: 8\n    }); // 300px / 16 = 18.75rem\n    const [tocVisible, setTocVisible] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    // Store footnote contents in a ref to avoid state update timing issues\n    const footnoteContentsRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({});\n    // Track scroll position for TOC positioning with throttling\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let ticking = false;\n        const handleScroll = ()=>{\n            if (!ticking) {\n                requestAnimationFrame(()=>{\n                    const scrollY = window.scrollY;\n                    const windowHeight = window.innerHeight;\n                    const tocHeight = 400; // Approximate TOC height\n                    const footer = document.querySelector(\"footer\");\n                    console.log(\"Scroll event triggered:\", {\n                        scrollY,\n                        windowHeight\n                    });\n                    // Base position - starts lower and moves with scroll but stays within bounds\n                    let baseTop = 300 + scrollY * 0.15; // Start lower and move with scroll at 15% rate\n                    console.log(\"Base top position:\", baseTop);\n                    // Ensure TOC doesn't go too high\n                    const minTop = 200; // Higher minimum top position\n                    baseTop = Math.max(minTop, baseTop);\n                    // Check if TOC would overlap with footer\n                    let shouldHide = false;\n                    if (footer) {\n                        const footerRect = footer.getBoundingClientRect();\n                        const footerTop = footerRect.top;\n                        // If TOC would overlap with footer, hide it\n                        if (baseTop + tocHeight > footerTop - 20) {\n                            shouldHide = true;\n                        }\n                    }\n                    // Also hide if TOC would go below viewport\n                    if (baseTop + tocHeight > windowHeight - 40) {\n                        shouldHide = true;\n                    }\n                    // Convert to rem units for consistency\n                    const topInRem = baseTop / 16;\n                    console.log(\"Setting TOC position:\", {\n                        top: topInRem,\n                        left: 8,\n                        shouldHide\n                    });\n                    setTocPosition({\n                        top: topInRem,\n                        left: 8\n                    });\n                    setTocVisible(!shouldHide);\n                    ticking = false;\n                });\n                ticking = true;\n            }\n        };\n        // Initial call to set position\n        handleScroll();\n        // Use locomotive scroll container if available\n        const scrollContainer = document.querySelector(\"[data-scroll-container]\");\n        if (scrollContainer) {\n            console.log(\"Using locomotive scroll container\");\n            scrollContainer.addEventListener(\"scroll\", handleScroll);\n            return ()=>scrollContainer.removeEventListener(\"scroll\", handleScroll);\n        } else {\n            console.log(\"Using window scroll\");\n            window.addEventListener(\"scroll\", handleScroll, {\n                passive: true\n            });\n            return ()=>window.removeEventListener(\"scroll\", handleScroll);\n        }\n    }, []);\n    // Parse markdown frontmatter and content\n    const parseMarkdown = (markdownContent)=>{\n        const frontmatterRegex = /^\\+\\+\\+\\s*\\n([\\s\\S]*?)\\n\\+\\+\\+\\s*\\n([\\s\\S]*)$/;\n        const match = markdownContent.match(frontmatterRegex);\n        if (match) {\n            const frontmatter = match[1];\n            const content = match[2];\n            // Parse frontmatter\n            const metadata = {};\n            const lines = frontmatter.split(\"\\n\").filter((line)=>line.trim());\n            lines.forEach((line)=>{\n                const equalIndex = line.indexOf(\" = \");\n                if (equalIndex !== -1) {\n                    const key = line.substring(0, equalIndex).trim();\n                    let value = line.substring(equalIndex + 3).trim();\n                    // Remove quotes if present\n                    if (value.startsWith('\"') && value.endsWith('\"')) {\n                        value = value.slice(1, -1);\n                    }\n                    metadata[key] = value;\n                }\n            });\n            return {\n                metadata,\n                content\n            };\n        }\n        return {\n            metadata: {},\n            content: markdownContent\n        };\n    };\n    // Process inline code\n    const processInlineCode = (content)=>{\n        const inlineCodeRegex = /`([^`]+)`/g;\n        return content.replace(inlineCodeRegex, '<code class=\"inline-code\">$1</code>');\n    };\n    // Parse P5Sketch components\n    const parseP5SketchComponents = (content)=>{\n        const segments = [];\n        // Simpler regex that matches the basic structure first\n        const p5SketchRegex = /<P5Sketch\\s+sketchPath=\"([^\"]+)\"\\s+width={(\\d+)}\\s+height={(\\d+)}[^>]*className=\"([^\"]+)\"\\s*\\/>/g;\n        let lastIndex = 0;\n        let match;\n        while((match = p5SketchRegex.exec(content)) !== null){\n            // Add content before the P5Sketch component\n            if (match.index > lastIndex) {\n                const beforeContent = content.substring(lastIndex, match.index);\n                if (beforeContent.trim()) {\n                    segments.push({\n                        type: \"html\",\n                        content: beforeContent\n                    });\n                }\n            }\n            // Parse the P5Sketch props\n            const p5SketchProps = {\n                sketchPath: match[1],\n                width: parseInt(match[2]),\n                height: parseInt(match[3]),\n                className: match[4]\n            };\n            // Extract sketchWidth and sketchHeight from the full match if they exist\n            const fullMatch = match[0];\n            const sketchWidthMatch = fullMatch.match(/sketchWidth={(\\d+)}/);\n            const sketchHeightMatch = fullMatch.match(/sketchHeight={(\\d+)}/);\n            if (sketchWidthMatch && sketchHeightMatch) {\n                p5SketchProps.sketchWidth = parseInt(sketchWidthMatch[1]);\n                p5SketchProps.sketchHeight = parseInt(sketchHeightMatch[1]);\n            }\n            // Add the P5Sketch component\n            segments.push({\n                type: \"p5sketch\",\n                content: \"\",\n                p5Sketch: p5SketchProps\n            });\n            lastIndex = match.index + match[0].length;\n        }\n        // Add remaining content after the last P5Sketch component\n        if (lastIndex < content.length) {\n            const afterContent = content.substring(lastIndex);\n            if (afterContent.trim()) {\n                segments.push({\n                    type: \"html\",\n                    content: afterContent\n                });\n            }\n        }\n        return segments;\n    };\n    // Parse Video components - simplified for Safari\n    const parseVideoComponents = (content)=>{\n        const segments = [];\n        const videoRegex = /<Video\\s+src=\"([^\"]+)\"[^>]*className=\"([^\"]+)\"\\s*\\/>/g;\n        let lastIndex = 0;\n        let match;\n        while((match = videoRegex.exec(content)) !== null){\n            // Add content before the Video component\n            if (match.index > lastIndex) {\n                const beforeContent = content.substring(lastIndex, match.index);\n                if (beforeContent.trim()) {\n                    segments.push({\n                        type: \"html\",\n                        content: beforeContent\n                    });\n                }\n            }\n            // Parse the Video props - simplified\n            const fullMatch = match[0];\n            const videoProps = {\n                src: match[1],\n                className: match[2]\n            };\n            // Extract additional props from the full match\n            const widthMatch = fullMatch.match(/width=\"([^\"]+)\"/);\n            const heightMatch = fullMatch.match(/height=\"([^\"]+)\"/);\n            const controlsMatch = fullMatch.match(/controls={([^}]+)}/);\n            const autoPlayMatch = fullMatch.match(/autoPlay={([^}]+)}/);\n            const mutedMatch = fullMatch.match(/muted={([^}]+)}/);\n            const loopMatch = fullMatch.match(/loop={([^}]+)}/);\n            const posterMatch = fullMatch.match(/poster=\"([^\"]+)\"/);\n            if (widthMatch) videoProps.width = widthMatch[1];\n            if (heightMatch) videoProps.height = heightMatch[1];\n            if (controlsMatch) videoProps.controls = controlsMatch[1] === \"true\";\n            if (autoPlayMatch) videoProps.autoPlay = autoPlayMatch[1] === \"true\";\n            if (mutedMatch) videoProps.muted = mutedMatch[1] === \"true\";\n            if (loopMatch) videoProps.loop = loopMatch[1] === \"true\";\n            if (posterMatch) videoProps.poster = posterMatch[1];\n            // Add the Video component\n            segments.push({\n                type: \"video\",\n                content: \"\",\n                video: videoProps\n            });\n            lastIndex = match.index + match[0].length;\n        }\n        // Add remaining content after the last Video component\n        if (lastIndex < content.length) {\n            const afterContent = content.substring(lastIndex);\n            if (afterContent.trim()) {\n                segments.push({\n                    type: \"html\",\n                    content: afterContent\n                });\n            }\n        }\n        return segments;\n    };\n    // Parse PDF components\n    const parsePDFComponents = (content)=>{\n        const segments = [];\n        const pdfRegex = /<PDF\\s+src=\"([^\"]+)\"[^>]*className=\"([^\"]+)\"\\s*\\/>/g;\n        let lastIndex = 0;\n        let match;\n        while((match = pdfRegex.exec(content)) !== null){\n            // Add content before the PDF component\n            if (match.index > lastIndex) {\n                const beforeContent = content.substring(lastIndex, match.index);\n                if (beforeContent.trim()) {\n                    segments.push({\n                        type: \"html\",\n                        content: beforeContent\n                    });\n                }\n            }\n            // Parse the PDF props\n            const fullMatch = match[0];\n            const pdfProps = {\n                src: match[1],\n                className: match[2]\n            };\n            // Extract additional props from the full match\n            const widthMatch = fullMatch.match(/width=\"([^\"]+)\"/);\n            const heightMatch = fullMatch.match(/height=\"([^\"]+)\"/);\n            if (widthMatch) pdfProps.width = widthMatch[1];\n            if (heightMatch) pdfProps.height = heightMatch[1];\n            // Add the PDF component\n            segments.push({\n                type: \"pdf\",\n                content: \"\",\n                pdf: pdfProps\n            });\n            lastIndex = match.index + match[0].length;\n        }\n        // Add remaining content after the last PDF component\n        if (lastIndex < content.length) {\n            const afterContent = content.substring(lastIndex);\n            if (afterContent.trim()) {\n                segments.push({\n                    type: \"html\",\n                    content: afterContent\n                });\n            }\n        }\n        return segments;\n    };\n    // Convert markdown to HTML and extract code blocks\n    const processMarkdown = (content)=>{\n        let processed = content;\n        const segments = [];\n        const codeBlocks = [];\n        // Process footnotes BEFORE splitting by code blocks\n        const footnoteRegex = /<footnote id=\"(\\d+)\" text=\"([^\"]+)\" content=\"([^\"]*?)\"><\\/footnote>/g;\n        let footnoteMatch;\n        console.log(\"=== PROCESSMARKDOWN FOOTNOTE DEBUG ===\");\n        console.log(\"Looking for footnotes in processed content...\");\n        // Find all footnote elements first\n        const allFootnotes = processed.match(/<footnote[^>]*><\\/footnote>/g);\n        console.log(\"All footnote elements found:\", allFootnotes);\n        // Process each footnote manually\n        let footnoteCount = 0;\n        allFootnotes === null || allFootnotes === void 0 ? void 0 : allFootnotes.forEach((footnoteElement, index)=>{\n            // Extract id, text, and content using a more robust approach\n            const idMatch = footnoteElement.match(/id=\"(\\d+)\"/);\n            const textMatch = footnoteElement.match(/text=\"([^\"]+)\"/);\n            const contentMatch = footnoteElement.match(/content=\"([^\"]+)\"/);\n            if (idMatch && textMatch && contentMatch) {\n                const id = idMatch[1];\n                const text = textMatch[1];\n                const encodedContent = contentMatch[1];\n                footnoteCount++;\n                // Decode the content and store in ref\n                const decodedContent = decodeURIComponent(encodedContent);\n                footnoteContentsRef.current[id] = decodedContent;\n                // Replace the footnote element\n                const replacement = '<span class=\"footnote-wrapper\"><button class=\"footnote-button\" data-footnote-id=\"'.concat(id, '\">').concat(id, \"</button></span>\");\n                processed = processed.replace(footnoteElement, replacement);\n            }\n        });\n        console.log(\"Total footnotes processed in processMarkdown: \".concat(footnoteCount));\n        // Split content by code blocks\n        const parts = processed.split(/(```[\\w]*\\n[\\s\\S]*?```)/g);\n        console.log(\"Content split into\", parts.length, \"parts\");\n        parts.forEach((part, index)=>{\n            if (part.includes(\"footnote-wrapper\")) {\n                console.log(\"Part \".concat(index, \" contains footnotes:\"), part.substring(0, 200));\n            }\n        });\n        parts.forEach((part, index)=>{\n            if (part.startsWith(\"```\")) {\n                // This is a code block\n                const match = part.match(/```(\\w+)?\\n([\\s\\S]*?)```/);\n                if (match) {\n                    const language = match[1] || \"text\";\n                    const code = match[2].trim();\n                    const codeBlock = {\n                        language,\n                        code,\n                        filename: \"example.\".concat(language === \"javascript\" || language === \"js\" ? \"js\" : language === \"typescript\" || language === \"ts\" ? \"ts\" : language === \"jsx\" ? \"jsx\" : language === \"tsx\" ? \"tsx\" : language === \"html\" ? \"html\" : language === \"css\" ? \"css\" : language === \"python\" ? \"py\" : language)\n                    };\n                    segments.push({\n                        type: \"codeblock\",\n                        content: \"\",\n                        codeBlock\n                    });\n                }\n            } else if (part.trim()) {\n                // This is regular content\n                let htmlContent = part;\n                // Process inline code\n                htmlContent = processInlineCode(htmlContent);\n                // Process headers with IDs\n                htmlContent = htmlContent.replace(/^### (.*$)/gim, (match, text)=>{\n                    const id = text.toLowerCase().replace(/[^a-z0-9]+/g, \"-\").replace(/(^-|-$)/g, \"\");\n                    return '<h3 id=\"'.concat(id, '\">').concat(text, \"</h3>\");\n                });\n                htmlContent = htmlContent.replace(/^## (.*$)/gim, (match, text)=>{\n                    const id = text.toLowerCase().replace(/[^a-z0-9]+/g, \"-\").replace(/(^-|-$)/g, \"\");\n                    return '<h2 id=\"'.concat(id, '\">').concat(text, \"</h2>\");\n                });\n                htmlContent = htmlContent.replace(/^# (.*$)/gim, \"<h1>$1</h1>\");\n                // Process bold and italic\n                htmlContent = htmlContent.replace(/\\*\\*(.*?)\\*\\*/g, \"<strong>$1</strong>\");\n                htmlContent = htmlContent.replace(/\\*(.*?)\\*/g, \"<em>$1</em>\");\n                // Process links\n                htmlContent = htmlContent.replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, '<a href=\"$2\">$1</a>');\n                // Process ordered lists\n                htmlContent = htmlContent.replace(/^\\d+\\.\\s+(.+)$/gm, \"<li>$1</li>\");\n                htmlContent = htmlContent.replace(/(<li>.*<\\/li>)/g, \"<ol>$1</ol>\");\n                // Process unordered lists\n                htmlContent = htmlContent.replace(/^-\\s+(.+)$/gm, \"<li>$1</li>\");\n                htmlContent = htmlContent.replace(/(<li>.*<\\/li>)/g, \"<ul>$1</ul>\");\n                // Process paragraphs\n                htmlContent = htmlContent.split(\"\\n\\n\").map((paragraph)=>{\n                    paragraph = paragraph.trim();\n                    if (!paragraph) return \"\";\n                    // Don't wrap headers, lists, or footnote elements in p tags\n                    if (paragraph.startsWith(\"<h\") || paragraph.startsWith(\"<ul>\") || paragraph.startsWith(\"<ol>\") || paragraph.includes(\"footnote-wrapper\")) {\n                        return paragraph;\n                    }\n                    return \"<p>\".concat(paragraph, \"</p>\");\n                }).join(\"\\n\");\n                segments.push({\n                    type: \"html\",\n                    content: htmlContent\n                });\n            }\n        });\n        return segments;\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let contentToProcess = content;\n        // First, try to parse markdown if it looks like it has frontmatter\n        if (content.startsWith(\"+++\")) {\n            const parsed = parseMarkdown(content);\n            setParsedData(parsed);\n            contentToProcess = parsed.content;\n        }\n        // Parse footnotes\n        const { processedContent, footnotes: parsedFootnotes } = (0,_ui_Footnote__WEBPACK_IMPORTED_MODULE_5__.parseFootnotes)(contentToProcess);\n        setFootnotes(parsedFootnotes);\n        // Parse P5Sketch components first\n        const p5Segments = parseP5SketchComponents(processedContent);\n        // Parse Video and PDF components from P5Sketch segments\n        const finalSegments = [];\n        p5Segments.forEach((segment)=>{\n            if (segment.type === \"p5sketch\") {\n                finalSegments.push(segment);\n            } else {\n                // Parse Video components from HTML segments\n                const videoSegments = parseVideoComponents(segment.content);\n                videoSegments.forEach((videoSegment)=>{\n                    if (videoSegment.type === \"video\") {\n                        finalSegments.push(videoSegment);\n                    } else {\n                        // Parse PDF components from remaining HTML segments\n                        const pdfSegments = parsePDFComponents(videoSegment.content);\n                        pdfSegments.forEach((pdfSegment)=>{\n                            if (pdfSegment.type === \"pdf\") {\n                                finalSegments.push(pdfSegment);\n                            } else {\n                                // Process markdown for remaining HTML segments\n                                const markdownSegments = processMarkdown(pdfSegment.content);\n                                finalSegments.push(...markdownSegments);\n                            }\n                        });\n                    }\n                });\n            }\n        });\n        setContentSegments(finalSegments);\n    }, [\n        content\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (contentSegments.length === 0) return;\n        // Extract headings and footnotes after content is processed\n        setTimeout(()=>{\n            const headingElements = document.querySelectorAll(\"h2[id], h3[id]\");\n            const extractedHeadings = Array.from(headingElements).map((heading)=>({\n                    id: heading.id,\n                    text: heading.textContent || \"\",\n                    level: parseInt(heading.tagName.charAt(1))\n                }));\n            setHeadings(extractedHeadings);\n            // Image click zoom\n            const imgElements = document.querySelectorAll(\".blog-content-container img\");\n            imgElements.forEach((img)=>{\n                img.style.cursor = \"zoom-in\";\n                img.onclick = ()=>handleImageClick(img.src);\n            });\n            // Setup footnote toggling with a delay to ensure DOM is ready\n            setTimeout(()=>{\n                const footnoteButtons = document.querySelectorAll(\".footnote-button\");\n                console.log(\"Found footnote buttons:\", footnoteButtons.length);\n                footnoteButtons.forEach((button, index)=>{\n                    console.log(\"Setting up button \".concat(index, \":\"), button);\n                    // Remove any existing listeners\n                    button.removeEventListener(\"click\", handleFootnoteClick);\n                    // Add new listener\n                    button.addEventListener(\"click\", handleFootnoteClick);\n                    // Also add onclick as backup\n                    button.onclick = (e)=>{\n                        e.preventDefault();\n                        e.stopPropagation();\n                        const footnoteId = button.getAttribute(\"data-footnote-id\");\n                        console.log(\"Footnote clicked via onclick:\", {\n                            footnoteId\n                        });\n                        if (footnoteId) {\n                            toggleFootnote(footnoteId);\n                        }\n                    };\n                });\n            }, 200);\n            // Add global click handler as backup\n            const handleGlobalClick = (e)=>{\n                const target = e.target;\n                if (target.classList.contains(\"footnote-button\")) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    const footnoteId = target.getAttribute(\"data-footnote-id\");\n                    console.log(\"Footnote clicked via global handler:\", {\n                        footnoteId\n                    });\n                    if (footnoteId) {\n                        toggleFootnote(footnoteId);\n                    }\n                }\n            };\n            document.addEventListener(\"click\", handleGlobalClick);\n        // No need to dispatch locomotive-update on blog pages since smooth scroll is disabled\n        }, 100);\n    }, [\n        contentSegments\n    ]);\n    // Separate function for footnote click handling\n    const handleFootnoteClick = (e)=>{\n        e.preventDefault();\n        e.stopPropagation();\n        const button = e.target;\n        const footnoteId = button.getAttribute(\"data-footnote-id\");\n        console.log(\"Footnote clicked via event listener:\", {\n            footnoteId\n        });\n        if (footnoteId) {\n            toggleFootnote(footnoteId);\n        }\n    };\n    // Function to toggle footnote visibility\n    const toggleFootnote = (id)=>{\n        console.log(\"toggleFootnote called with:\", {\n            id\n        });\n        console.log(\"All footnote contents in ref:\", footnoteContentsRef.current);\n        // Get content from ref\n        const footnoteContent = footnoteContentsRef.current[id];\n        console.log(\"Footnote content for id\", id, \":\", footnoteContent);\n        if (!footnoteContent) {\n            console.error(\"No footnote content found for id:\", id);\n            return;\n        }\n        // Remove highlight from all footnotes\n        document.querySelectorAll(\".footnote-highlight\").forEach((el)=>{\n            el.classList.remove(\"footnote-highlight\");\n        });\n        // Remove any existing footnotes\n        document.querySelectorAll(\".dynamic-footnote\").forEach((el)=>{\n            el.remove();\n        });\n        // Get the button that was clicked\n        const button = document.querySelector('[data-footnote-id=\"'.concat(id, '\"]'));\n        if (button) {\n            const wrapper = button.closest(\".footnote-wrapper\");\n            if (wrapper) {\n                console.log(\"Wrapper:\", wrapper);\n                // Set wrapper position\n                wrapper.style.position = \"relative\";\n                // Create the footnote with simple centered positioning\n                const footnote = document.createElement(\"div\");\n                footnote.className = \"dynamic-footnote\";\n                footnote.style.position = \"absolute\";\n                footnote.style.left = \"0%\";\n                footnote.style.top = \"170%\";\n                footnote.style.zIndex = \"1000\";\n                footnote.innerHTML = '\\n          <div class=\"footnote-content\">\\n            <div class=\"footnote-header\">\\n              <span class=\"footnote-number\">'.concat(id, '</span>\\n              <button class=\"footnote-close\" onclick=\"closeFootnote(\\'').concat(id, '\\')\">\\xd7</button>\\n            </div>\\n            <div class=\"footnote-text\"></div>\\n          </div>\\n        ');\n                // Set the HTML content properly to render links\n                const footnoteTextElement = footnote.querySelector(\".footnote-text\");\n                if (footnoteTextElement) {\n                    footnoteTextElement.innerHTML = footnoteContent;\n                }\n                // Add the footnote\n                wrapper.appendChild(footnote);\n            }\n            // Highlight the button\n            button.classList.add(\"footnote-highlight\");\n        }\n    };\n    // Function to close footnotes\n    const closeFootnote = (id)=>{\n        // Remove the footnote\n        const footnote = document.querySelector(\".dynamic-footnote\");\n        if (footnote) {\n            footnote.remove();\n        }\n        // Remove highlight from the button\n        const button = document.querySelector('[data-footnote-id=\"'.concat(id, '\"]'));\n        if (button) {\n            button.classList.remove(\"footnote-highlight\");\n        }\n    };\n    // Make closeFootnote available globally\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        window.closeFootnote = closeFootnote;\n    }, []);\n    // Function to handle image click and zoom\n    const handleImageClick = (src)=>{\n        setZoomedImage(src);\n    };\n    const closeZoomedImage = ()=>{\n        setZoomedImage(null);\n    };\n    // Get display values from props or parsed metadata\n    const displayTitle = title || (parsedData === null || parsedData === void 0 ? void 0 : parsedData.metadata.title) || \"\";\n    const displayDate = date || (parsedData === null || parsedData === void 0 ? void 0 : parsedData.metadata.date);\n    const displayAuthor = author || (parsedData === null || parsedData === void 0 ? void 0 : parsedData.metadata.author);\n    const displayImage = image || (parsedData === null || parsedData === void 0 ? void 0 : parsedData.metadata.image);\n    const displayDescription = description || (parsedData === null || parsedData === void 0 ? void 0 : parsedData.metadata.description);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"article\", {\n        className: \"prose dark:prose-invert max-w-none\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"relative w-full\",\n                children: [\n                    headings.length > 0 && tocVisible && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"hidden xl:block w-48\",\n                        style: {\n                            position: \"fixed\",\n                            left: \"\".concat(tocPosition.left, \"rem\"),\n                            top: \"\".concat(tocPosition.top, \"rem\"),\n                            zIndex: 10,\n                            maxHeight: \"calc(100vh - 320px)\",\n                            overflow: \"hidden\",\n                            transition: \"top 0.3s ease-out, opacity 0.3s ease-out\",\n                            opacity: tocVisible ? 1 : 0,\n                            backgroundColor: \"rgba(255, 0, 0, 0.1)\" // Debug background\n                        },\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_TableOfContents__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                            headings: headings\n                        }, void 0, false, {\n                            fileName: \"/Users/davidholcer/GitHub/davidholcer.com_cursored/react-app/src/components/BlogPost.tsx\",\n                            lineNumber: 816,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/davidholcer/GitHub/davidholcer.com_cursored/react-app/src/components/BlogPost.tsx\",\n                        lineNumber: 805,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mx-auto\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"header\", {\n                                className: \"mb-12 text-center\",\n                                children: [\n                                    displayTitle && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                                        className: \"text-6xl md:text-5xl font-medium mb-6 montreal\",\n                                        children: displayTitle\n                                    }, void 0, false, {\n                                        fileName: \"/Users/davidholcer/GitHub/davidholcer.com_cursored/react-app/src/components/BlogPost.tsx\",\n                                        lineNumber: 825,\n                                        columnNumber: 15\n                                    }, this),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"flex items-center justify-center gap-4 text-gray-600 dark:text-gray-300 mb-6\",\n                                        children: [\n                                            displayAuthor && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                children: displayAuthor\n                                            }, void 0, false, {\n                                                fileName: \"/Users/davidholcer/GitHub/davidholcer.com_cursored/react-app/src/components/BlogPost.tsx\",\n                                                lineNumber: 828,\n                                                columnNumber: 33\n                                            }, this),\n                                            displayAuthor && displayDate && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                children: \"•\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/davidholcer/GitHub/davidholcer.com_cursored/react-app/src/components/BlogPost.tsx\",\n                                                lineNumber: 829,\n                                                columnNumber: 48\n                                            }, this),\n                                            displayDate && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"time\", {\n                                                dateTime: displayDate,\n                                                children: (()=>{\n                                                    const [year, month, day] = displayDate.split(\"-\").map(Number);\n                                                    return new Date(year, month - 1, day).toLocaleDateString();\n                                                })()\n                                            }, void 0, false, {\n                                                fileName: \"/Users/davidholcer/GitHub/davidholcer.com_cursored/react-app/src/components/BlogPost.tsx\",\n                                                lineNumber: 831,\n                                                columnNumber: 17\n                                            }, this)\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/davidholcer/GitHub/davidholcer.com_cursored/react-app/src/components/BlogPost.tsx\",\n                                        lineNumber: 827,\n                                        columnNumber: 13\n                                    }, this),\n                                    displayDescription && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                        className: \"text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto leading-relaxed\",\n                                        children: displayDescription\n                                    }, void 0, false, {\n                                        fileName: \"/Users/davidholcer/GitHub/davidholcer.com_cursored/react-app/src/components/BlogPost.tsx\",\n                                        lineNumber: 840,\n                                        columnNumber: 15\n                                    }, this)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/davidholcer/GitHub/davidholcer.com_cursored/react-app/src/components/BlogPost.tsx\",\n                                lineNumber: 823,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"blog-content-container max-w-3xl mx-auto\",\n                                children: contentSegments.map((segment, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        children: segment.type === \"html\" ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            dangerouslySetInnerHTML: {\n                                                __html: segment.content\n                                            }\n                                        }, void 0, false, {\n                                            fileName: \"/Users/davidholcer/GitHub/davidholcer.com_cursored/react-app/src/components/BlogPost.tsx\",\n                                            lineNumber: 851,\n                                            columnNumber: 19\n                                        }, this) : segment.type === \"p5sketch\" && segment.p5Sketch ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_P5Sketch__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                                                sketchPath: segment.p5Sketch.sketchPath,\n                                                width: segment.p5Sketch.width,\n                                                height: segment.p5Sketch.height,\n                                                sketchWidth: segment.p5Sketch.sketchWidth,\n                                                sketchHeight: segment.p5Sketch.sketchHeight,\n                                                className: segment.p5Sketch.className\n                                            }, void 0, false, {\n                                                fileName: \"/Users/davidholcer/GitHub/davidholcer.com_cursored/react-app/src/components/BlogPost.tsx\",\n                                                lineNumber: 854,\n                                                columnNumber: 21\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/davidholcer/GitHub/davidholcer.com_cursored/react-app/src/components/BlogPost.tsx\",\n                                            lineNumber: 853,\n                                            columnNumber: 19\n                                        }, this) : segment.type === \"video\" && segment.video ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ui_Video__WEBPACK_IMPORTED_MODULE_7__.Video, {\n                                                src: segment.video.src,\n                                                width: segment.video.width,\n                                                height: segment.video.height,\n                                                controls: segment.video.controls,\n                                                autoPlay: segment.video.autoPlay,\n                                                muted: segment.video.muted,\n                                                loop: segment.video.loop,\n                                                poster: segment.video.poster,\n                                                className: segment.video.className\n                                            }, void 0, false, {\n                                                fileName: \"/Users/davidholcer/GitHub/davidholcer.com_cursored/react-app/src/components/BlogPost.tsx\",\n                                                lineNumber: 865,\n                                                columnNumber: 21\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/davidholcer/GitHub/davidholcer.com_cursored/react-app/src/components/BlogPost.tsx\",\n                                            lineNumber: 864,\n                                            columnNumber: 19\n                                        }, this) : segment.type === \"pdf\" && segment.pdf ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ui_PDF__WEBPACK_IMPORTED_MODULE_8__.PDF, {\n                                                src: segment.pdf.src,\n                                                width: segment.pdf.width,\n                                                height: segment.pdf.height,\n                                                className: segment.pdf.className\n                                            }, void 0, false, {\n                                                fileName: \"/Users/davidholcer/GitHub/davidholcer.com_cursored/react-app/src/components/BlogPost.tsx\",\n                                                lineNumber: 879,\n                                                columnNumber: 21\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/davidholcer/GitHub/davidholcer.com_cursored/react-app/src/components/BlogPost.tsx\",\n                                            lineNumber: 878,\n                                            columnNumber: 19\n                                        }, this) : segment.codeBlock && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ui_CodeBlock__WEBPACK_IMPORTED_MODULE_3__.CodeBlock, {\n                                            language: segment.codeBlock.language,\n                                            filename: segment.codeBlock.filename,\n                                            code: segment.codeBlock.code\n                                        }, void 0, false, {\n                                            fileName: \"/Users/davidholcer/GitHub/davidholcer.com_cursored/react-app/src/components/BlogPost.tsx\",\n                                            lineNumber: 888,\n                                            columnNumber: 21\n                                        }, this)\n                                    }, index, false, {\n                                        fileName: \"/Users/davidholcer/GitHub/davidholcer.com_cursored/react-app/src/components/BlogPost.tsx\",\n                                        lineNumber: 849,\n                                        columnNumber: 15\n                                    }, this))\n                            }, void 0, false, {\n                                fileName: \"/Users/davidholcer/GitHub/davidholcer.com_cursored/react-app/src/components/BlogPost.tsx\",\n                                lineNumber: 847,\n                                columnNumber: 11\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/davidholcer/GitHub/davidholcer.com_cursored/react-app/src/components/BlogPost.tsx\",\n                        lineNumber: 821,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/davidholcer/GitHub/davidholcer.com_cursored/react-app/src/components/BlogPost.tsx\",\n                lineNumber: 802,\n                columnNumber: 7\n            }, this),\n            zoomedImage && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"fixed top-0 left-0 w-full h-full bg-black bg-opacity-80 z-50 flex items-center justify-center\",\n                onClick: closeZoomedImage,\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_image__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                    src: zoomedImage,\n                    alt: \"Zoomed Image\",\n                    width: 1200,\n                    height: 800,\n                    className: \"rounded-lg cursor-zoom-out\",\n                    style: {\n                        maxWidth: \"90%\",\n                        maxHeight: \"90%\",\n                        objectFit: \"contain\"\n                    },\n                    onClick: closeZoomedImage\n                }, void 0, false, {\n                    fileName: \"/Users/davidholcer/GitHub/davidholcer.com_cursored/react-app/src/components/BlogPost.tsx\",\n                    lineNumber: 904,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/davidholcer/GitHub/davidholcer.com_cursored/react-app/src/components/BlogPost.tsx\",\n                lineNumber: 903,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/davidholcer/GitHub/davidholcer.com_cursored/react-app/src/components/BlogPost.tsx\",\n        lineNumber: 800,\n        columnNumber: 5\n    }, this);\n}\n_s(BlogPost, \"BuQ+K0ZA7wa+AeKpSovZI+UzfWo=\");\n_c = BlogPost;\nvar _c;\n$RefreshReg$(_c, \"BlogPost\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/BlogPost.tsx\n"));

/***/ })

});